- Based on "Task - MDS Test V3"

// --------------------------------------
// Docker
// --------------------------------------
- Git Examples
	https://git.soma.salesforce.com/mc-einstein/lalaland

- Log into docker repository
	docker login dva-registry.internal.salesforce.com

- Build docker image
	docker build -t lalaland .
	build local lalaland image, which is used by the docker-compose.yaml

- Remove images
	 docker image rm -f 8d37453c83c4
	 docker rmi dc930f605d40
	 
- Log into local pod
	docker exec -it c1e5cd935942 bash
	docker compose exec ws bash
		ws is a service (see yaml in Docker Compose of this document)



// --------------------------------------
// Docker & MYSQL & Flyweel 
// --------------------------------------
- Docker-Compose.yaml
	db:
	    image: postgres
	    volumes:
	      - acdc-postgres-data:/var/lib/postgresql/data
	    ports:
	      - 5432:5432
	    environment:
	      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

	flyway:
	    image: flyway/flyway:latest-alpine
	    volumes:
	      - ./flyway/sql/:/flyway/sql/
	    environment:
	      FLYWAY_URL: "jdbc:postgresql://db:5432/postgres"
	      FLYWAY_USER: "postgres"
	      FLYWAY_PASSWORD: "${POSTGRES_PASSWORD}"
	    depends_on:
	      - db
	    command:
	      migrate
	adminer:
	    image: adminer
	    restart: always
	    ports:
	      - 8087:8080

- Local mac volume missing inside container
	If dev on mac, make sure to System Preferences --> file sharing to directory where all these 

- Tip1: for trainsient containers, put a command to loop indefinitely so you can verify setup
	..
	entrypoint: [ "/bin/sh","-c", "tail -f /dev/null"]

	docker exec -it [CONTAINER-ID] bash

- MYSQL
	* use the pgadmin docker image to have an UI to log in
		docker-compose.yaml
			adminer:
			    image: adminer
			    restart: always
			    ports:
			      - 8087:8080

			docker-compose up

			localhost:8087

	* from mac, try to log in via mysql commanad; make sure mysql container has port opened on 5432, ie --port 5432:5432
		psql -h localhost -p 5432 -U postgres



// --------------------------------------
// Docker Comppose
// 	 * enables us to package multiple components/web-services with disk,e tc..
//   * in comparison, a docker file is a singular image
// --------------------------------------
- Sample YAML
	// This yaml 
	//    - launches ws based on local lalaland docker image
	//    - starts up a db using flyaway
	//	  - port forward to cdp's mds and dpc services

	version: "3.8"

	services:
	  ws:
	    image: lalaland
	    working_dir: /lalaland/ws
	    volumes:
	      - ./:/lalaland/ws
	    environment:
	      NEXUS_USERNAME: "${NEXUS_USERNAME}"
	      NEXUS_PASSWORD: "${NEXUS_PASSWORD}"
	      POSTGRES_PASSWORD: "${LALALAND_PG_SECRET}"
	    ports:
	      - 8080:8080
	    # command:
	    #   chmod +x scripts/dev_sbt_config_setup.sh && ./scripts/dev_sbt_config_setup.sh
	    #   sbt ';project ws; runMain com.salesforce.mce.lalaland.LalalandServer'
	    tty: true

	  db:
	    image: postgres
	    volumes:
	      - lalaland-postgres-data:/var/lib/postgresql/data
	    environment:
	      POSTGRES_PASSWORD: "${LALALAND_PG_SECRET}"

	  flyway:
	    image: flyway/flyway:latest-alpine
	    volumes:
	      - ./flyway/sql:/flyway/sql
	    environment:
	      FLYWAY_URL: "jdbc:postgresql://db:5432/postgres"
	      FLYWAY_USER: "postgres"
	      FLYWAY_PASSWORD: "${LALALAND_PG_SECRET}"
	    command:
	      migrate

	  mds:
	    image: alpine/k8s:1.21.5
	    environment:
	      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
	      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
	      AWS_SESSION_TOKEN: "${AWS_SESSION_TOKEN}"
	    ports:
	      - 7021:7021
	    command: >
	      bash -c "aws eks update-kubeconfig --region us-west-2 --name cdp-dev1-1 &&
	      kubectl port-forward svc/metadata-service 7021:7020 -n cdp --address 0.0.0.0"

	  dpc:
	    image: alpine/k8s:1.21.5
	    environment:
	      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
	      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
	      AWS_SESSION_TOKEN: "${AWS_SESSION_TOKEN}"
	    ports:
	      - 7022:7022
	    command: >
	      bash -c "aws eks update-kubeconfig --region us-west-2 --name cdp-dev1-1 &&
	      kubectl port-forward svc/dpc 7022:7020 -n cdp --address 0.0.0.0"
	volumes:
	  lalaland-postgres-data:

- How does volumne work?
	volume: 
		working_dir: [CONTAINER-DIR]
		- [. = local mac directory where docker-comppose ] : [CONTAINER-DIR]

		CONTAINER-DIR is the offset from / when you log into container

	Ex:
		ws:
		   image: realstraw/sbt
		   volumes:
		      - ./:/acdc/ws
		   environment:
		      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
		   ports:
		      - 9001:9000
		   tty: true # for easy debugging
		    
- .env file
	* Put in the top level of the project; where docker-compose.yaml is

	* Put any variables that the docker-compose.yaml uses
		ie: export ORCHARD_PG_SECRET=orchardsecret

	* Test
		docker-compose convert
			outputs the docker compose final format; if the yaml uses any variables from .env, it should be replaced


- docker compose up -d
	dc up -d
	
	Variants:
		docker-compose up --always-recreate-deps --force-recreate --detach

		docker-compose up --always-recreate-deps --force-recreate --env-file .env --detach 


- docker compose down

- Test local ws either via sbt or container
	via ws container
	    	docker compose exec ws sbt
	    	runMain com.salesforce.mce.lalaland.LalalandServer

    via sbt local mac
    	code chagnes
    		reference.conf:  mds.host from mds to 0.0.0
    		build.sbt: 	fork: true --> false

    	Confirm mds proxy is up via Docker HUB

    	See notes on how to debugger with intellij in "Tools - SBT and Scala and Java"
	    	click eclipse sbt shell
	    		click debugger in sbt shell

		    	runMain com.salesforce.mce.lalaland.LalalandServer


  	SBT can be used to run any object class main method
	 	sbt runMain package.objectname
	 		objectname needs a main method